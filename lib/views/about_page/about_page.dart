import 'package:flutter/material.dart';

class AboutPage extends StatefulWidget {
  @override
  State<AboutPage> createState() => _AboutPageState();
}

class _AboutPageState extends State<AboutPage>
    with SingleTickerProviderStateMixin {
  final Color primaryColor = const Color(0xFF6D4C41); // Rich brown
  final Color accentColor = const Color(0xFFFFA726); // Vibrant orange

  late AnimationController _controller;
  late Animation<double> _fadeInAnimation;
  late Animation<double> _scaleAnimation;

  @override
  void initState() {
    super.initState();
    _controller = AnimationController(
      vsync: this,
      duration: const Duration(seconds: 2),
    );
    _fadeInAnimation = CurvedAnimation(
      parent: _controller,
      curve: Curves.easeInOut,
    );
    _scaleAnimation = Tween<double>(
      begin: 0.8,
      end: 1.0,
    ).animate(CurvedAnimation(parent: _controller, curve: Curves.easeInOut));
    _controller.forward();
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  Widget _buildSection({
    required IconData icon,
    required String title,
    String? content,
    Widget? contentWidget,
    bool isHighlighted = false, // Flag to highlight specific sections
  }) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
      child: Card(
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),
        elevation: 8,
        color: Colors.white.withOpacity(0.95),
        child: Container(
          decoration:
              isHighlighted
                  ? BoxDecoration(
                    borderRadius: BorderRadius.circular(20),
                    gradient: LinearGradient(
                      colors: [accentColor.withOpacity(0.1), Colors.white],
                      begin: Alignment.topLeft,
                      end: Alignment.bottomRight,
                    ),
                  )
                  : null,
          child: Padding(
            padding: const EdgeInsets.all(16),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Row(
                  children: [
                    ScaleTransition(
                      scale: _scaleAnimation,
                      child: Icon(icon, color: accentColor, size: 32),
                    ),
                    const SizedBox(width: 16),
                    Text(
                      title,
                      style: TextStyle(
                        fontSize: 24,
                        fontWeight: FontWeight.w600,
                        color: primaryColor,
                        shadows: [
                          Shadow(
                            color: Colors.black12,
                            offset: const Offset(1, 1),
                            blurRadius: 4,
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
                const Divider(height: 24, thickness: 1.5, color: Colors.grey),
                FadeTransition(
                  opacity: _fadeInAnimation,
                  child:
                      contentWidget ??
                      Text(
                        content ?? '',
                        style: TextStyle(
                          fontSize: 18,
                          height: 1.6,
                          color: Colors.black87,
                          fontStyle:
                              isHighlighted
                                  ? FontStyle.italic
                                  : FontStyle.normal,
                        ),
                      ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey.shade50,
      appBar: AppBar(
        backgroundColor: primaryColor,
        elevation: 0,
        leading: IconButton(
          icon: const Icon(Icons.arrow_back, color: Colors.white),
          onPressed: () => Navigator.pop(context),
        ),
        title: const Text(
          'Gi·ªõi thi·ªáu ·ª©ng d·ª•ng',
          style: TextStyle(
            color: Colors.white,
            fontWeight: FontWeight.bold,
            fontSize: 22,
          ),
        ),
      ),
      body: ListView(
        padding: const EdgeInsets.only(bottom: 20),
        children: [
          ClipPath(
            clipper: BottomCurveClipper(),
            child: Container(
              height: 300,
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  colors: [primaryColor, accentColor.withOpacity(0.8)],
                  begin: Alignment.topLeft,
                  end: Alignment.bottomRight,
                ),
              ),
              child: ScaleTransition(
                scale: _scaleAnimation,
                child: FadeTransition(
                  opacity: _fadeInAnimation,
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text(
                        'Readify',
                        style: TextStyle(
                          fontSize: 50,
                          fontWeight: FontWeight.w900,
                          fontStyle: FontStyle.italic,
                          color: Colors.white,
                          shadows: [
                            Shadow(
                              color: Colors.black38,
                              offset: const Offset(2, 2),
                              blurRadius: 6,
                            ),
                          ],
                        ),
                      ),
                      const SizedBox(height: 20),
                      Container(
                        decoration: BoxDecoration(
                          shape: BoxShape.circle,
                          boxShadow: const [
                            BoxShadow(
                              color: Colors.black26,
                              blurRadius: 20,
                              offset: Offset(0, 8),
                            ),
                          ],
                        ),
                        child: ClipRRect(
                          borderRadius: BorderRadius.circular(80),
                          child: Image.asset(
                            'assets/images/reading.png',
                            width: 160,
                            height: 160,
                            fit: BoxFit.cover,
                            errorBuilder: (context, error, stackTrace) {
                              return const Icon(
                                Icons.broken_image,
                                size: 160,
                                color: Colors.white70,
                              );
                            },
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ),
          ),

          const SizedBox(height: 20),

          _buildSection(
            icon: Icons.flag,
            title: 'M·ª•c ti√™u ·ª©ng d·ª•ng',
            content:
                'Readify mang ƒë·∫øn tr·∫£i nghi·ªám ƒë·ªçc s√°ch hi·ªán ƒë·∫°i, d·ªÖ s·ª≠ d·ª•ng v√† th√¢n thi·ªán, gi√∫p b·∫°n l∆∞u tr·ªØ, qu·∫£n l√Ω v√† kh√°m ph√° h√†ng ng√†n cu·ªën s√°ch ngay tr√™n ƒëi·ªán tho·∫°i.',
            isHighlighted: true, // Highlight this section
          ),

          _buildSection(
            icon: Icons.person,
            title: 'ƒê·ªëi t∆∞·ª£ng ng∆∞·ªùi d√πng',
            content:
                'Ph√π h·ª£p v·ªõi m·ªçi l·ª©a tu·ªïi y√™u s√°ch, t·ª´ h·ªçc sinh, sinh vi√™n ƒë·∫øn nh√¢n vi√™n vƒÉn ph√≤ng, ng∆∞·ªùi y√™u vƒÉn h·ªçc, k·ªπ nƒÉng, ti·∫øng Anh v√† nhi·ªÅu th·ªÉ lo·∫°i kh√°c.',
          ),

          _buildSection(
            icon: Icons.star,
            title: 'T√≠nh nƒÉng n·ªïi b·∫≠t',
            contentWidget: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: const [
                _FeatureItem(text: 'üìö Giao di·ªán ƒë·ªçc t·ªëi ∆∞u, th√¢n thi·ªán.'),
                _FeatureItem(text: 'üîç T√¨m ki·∫øm v√† ph√¢n lo·∫°i s√°ch th√¥ng minh.'),
                _FeatureItem(text: '‚ù§Ô∏è L∆∞u s√°ch y√™u th√≠ch, theo d√µi ƒë·ªçc.'),
                _FeatureItem(text: 'üìà Th·ªëng k√™ ƒë·ªçc theo th·ªùi gian.'),
                _FeatureItem(text: 'üì§ Chia s·∫ª s√°ch d·ªÖ d√†ng.'),
              ],
            ),
          ),

          _buildSection(
            icon: Icons.contact_mail,
            title: 'Th√¥ng tin li√™n h·ªá',
            contentWidget: Column(
              children: const [
                _ContactItem(
                  icon: Icons.phone,
                  text: 'S·ªë ƒëi·ªán tho·∫°i: 1900 545482',
                  accentColor: Color(0xFFFFA726),
                ),
                _ContactItem(
                  icon: Icons.email,
                  text: 'Email: support@readify.app',
                  accentColor: Color(0xFFFFA726),
                ),
                _ContactItem(
                  icon: Icons.info,
                  text: 'Phi√™n b·∫£n: 1.0.0',
                  accentColor: Color(0xFFFFA726),
                ),
                _ContactItem(
                  icon: Icons.privacy_tip,
                  text: 'Ch√≠nh s√°ch b·∫£o m·∫≠t',
                  accentColor: Color(0xFFFFA726),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}

class _FeatureItem extends StatelessWidget {
  final String text;

  const _FeatureItem({required this.text});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 10),
      child: Row(
        children: [
          Text(
            text.substring(0, 2),
            style: const TextStyle(fontSize: 18, color: Color(0xFF6D4C41)),
          ),
          const SizedBox(width: 8),
          Expanded(
            child: Text(
              text.substring(2),
              style: const TextStyle(fontSize: 18, color: Colors.black87),
            ),
          ),
        ],
      ),
    );
  }
}

class _ContactItem extends StatelessWidget {
  final IconData icon;
  final String text;
  final Color accentColor;

  const _ContactItem({
    required this.icon,
    required this.text,
    required this.accentColor,
  });

  @override
  Widget build(BuildContext context) {
    return ListTile(
      contentPadding: EdgeInsets.zero,
      leading: Icon(icon, color: accentColor, size: 24),
      title: Text(text, style: const TextStyle(fontSize: 17)),
      dense: true,
    );
  }
}

class BottomCurveClipper extends CustomClipper<Path> {
  @override
  Path getClip(Size size) {
    Path path = Path();
    path.lineTo(0, size.height - 60);
    path.quadraticBezierTo(
      size.width / 2,
      size.height + 20,
      size.width,
      size.height - 60,
    );
    path.lineTo(size.width, 0);
    path.close();
    return path;
  }

  @override
  bool shouldReclip(CustomClipper<Path> oldClipper) => false;
}
